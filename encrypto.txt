ECDSA算法用于数字签名，是ECC与DSA的结合，整个签名过程与DSA类似，所不一样的是签名中采取的算法为ECC，最后签名出来的值也是分为r,s。签名过程如下：
    1、选择一条椭圆曲线Ep(a,b)，和基点G；
    2、选择私有密钥k（k<n，n为G的阶），利用基点G计算公开密钥K=kG；
    3、产生一个随机整数r（r<n），计算点R=rG；
    4、将原数据和点R的坐标值x,y作为参数，计算SHA1做为hash，即Hash=SHA1(原数据,x,y)；
    5、计算s≡r - Hash * k (mod n)
    6、r和s做为签名值，如果r和s其中一个为0，重新从第3步开始执行
验证过程如下：
    1、接受方在收到消息(m)和签名值(r,s)后，进行以下运算
    2、计算：sG+H(m)P=(x1,y1), r1≡ x1 mod p。
    3、验证等式：r1 ≡ r mod p。
    4、如果等式成立，接受签名，否则签名无效。
证明公式：
    签名体制的正确性证明：
    sG+H(m)P
    =(k-H(m)nA)G+H(m)P
    =kG-H(m)nAG+H(m)P
    =kG-H(m)P+H(m)P
    =kG
    所以，r1≡r mod p。
    R=kG；P=nAG; s=k-H(m)*nA mod p
简单的例子：
签名过程：选取随机数k = 3，假设h(m) = 4 ，则计算(x,y) = kG = 3 (x,y) = kG = 3(0,2)=(11,9)，r = x mod n = 11 mod 23 = 11，s=k-H(m)×nA mod p = 3 –4×9 mod 23 = 13。因此对m的签名为(11 13)。
验证过程：签名接收者B得到签名后计算：sG+H(m)P= 13G + 4P = (11,9)，r1 = x1 mod n = 11 mod 29 = 11 = r。因此B接受签名。


DES加密算法
DES全称为Data Encryption Standard，即数据加密标准，是一种使用密钥加密的块算法，1976年被美国联邦政府的国家标准局确定为联邦资料处理标准(FIPS)，随后在国际上广泛流传开来。
DES算法把64位的明文输入块变为64位的密文输出块，他所使用的密钥也是64位，DES对64 位的明文分组进行操作。通过一个初始置换，将明文分组分成左半部分和右半部分，各32位长。然后进行16轮相同的运算，这些相同的运算被称为函数f，在运算过程中数据和密钥相结合。经过16轮运算后左、右部分在一起经过一个置换(初始置换的逆置换)，这样算法就完成了。
算法步骤
(1)初始置换
	其功能是把输入的64位数据块按位重新组合,并把输出分为L0、R0两部分,每部分各长32位,其置换规则为将输入的第58位换到第一位,第50位换到第2位……依此类推,最后一位是原来的第7位。L0、R0则是换位输出后的两部分，L0是输出的左32位,R0是右32位,例:设置换前的输入值为D1D2D3……D64,则经过初始置换后的结果为:L0=D58D50……D8;R0=D57D49……D7。
其置换规则见下表：
58,50,42,34,26,18,10,2,60,52,44,36,28,20,12,4,
62,54,46,38,30,22,14,6,64,56,48,40,32,24,16,8,
57,49,41,33,25,17,9,1,59,51,43,35,27,19,11,3,
61,53,45,37,29,21,13,5,63,55,47,39,31,23,15,7,
(2)逆置换
经过16次迭代运算后,得到L16、R16,将此作为输入,进行逆置换,逆置换正好是初始置换的逆运算，由此即得到密文输出。例如，第1位经过初始置换后，处于第40位，而通过逆置换，又将第40位换回到第1位。
(3)函数f(Ri,Ki)的计算
	“扩展置换”是将32位放大成48位，“P盒置换”是32位到32位换位，在(Ri,Ki)算法描述图中，选择函数功能是把6 b数据变为4 b数据。
(4)子密钥Ki(48 b)的生成算法
    开始，由于不考虑每个字节的第8位，DES的密钥从64位变为48位，如表6所示，首先56位 密钥被分成两个部分，每部分28位，然后根据轮数，两部分分别循环左移1或2位。
DES算法规定，其中第8，16，„，64位是奇偶校验位，不参与DES运算。故Key实际可用 位数只有56位。即：经过密钥置换表的变换后，Key的位数由64位变成了56位，此56位分为C 0，D0两部分，各28位，然后分别进行第一次循环左移，得到C1，D1，将C1(28位)，D1(28位 )合并得到56位，再经过压缩置换，从而便得到了密钥K0(48位)。依次类推，便可得到K1，K 2，„，K15。需要注意的是，16次循环左移对应的左移位数要依据表7所示的规则进行。以上介绍了DES算法的加密过程。DES算法的解密过程是一样的，区别仅在于第一次迭代时用子密钥K15，第二次是K14，„，最后一次用K0，算法本身并没有任何变化。
